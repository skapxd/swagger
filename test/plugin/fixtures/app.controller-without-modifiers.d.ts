export declare const appControllerWithoutModifiersText = "import { Controller, Post, HttpStatus } from '@nestjs/common';\nimport { ApiOperation } from '@nestjs/swagger';\n\nclass Cat {}\n\n@Controller('cats')\nexport class AppController {\n  onApplicationBootstrap() {}\n\n  /**\n   * create a Cat\n   *\n   * @returns {Promise<Cat>}\n   * @memberof AppController\n   */\n  @Post()\n  create(): Promise<Cat> {}\n\n  /**\n   * create a test Cat\n   *\n   * @deprecated Use create instead\n   * @returns {Promise<Cat>}\n   * @memberof AppController\n   */\n  @Post()\n  testCreate(): Promise<Cat> {}\n\n  /**\n   * create a test Cat, not actually deprecated\n   *\n   * @deprecated\n   * @returns {Promise<Cat>}\n   * @memberof AppController\n   */\n  @ApiOperation({ deprecated: false })\n  @Post()\n  testCreate2(): Promise<Cat> {}\n\n  /**\n   * find a Cat\n   */\n  @ApiOperation({})\n  @Get()\n  findOne(): Promise<Cat> {}\n\n  /**\n   * find all Cats im comment\n   *\n   * @returns {Promise<Cat>}\n   * @memberof AppController\n   */\n  @ApiOperation({\n    description: 'find all Cats',\n  })\n  @Get()\n  @HttpCode(HttpStatus.NO_CONTENT)\n  findAll(): Promise<Cat[]> {}\n  \n  @Get()\n  @HttpCode(HttpStatus.NO_CONTENT)\n  noComment() {}\n}";
export declare const appControllerWithoutModifiersTextTranspiled = "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AppController = void 0;\nconst openapi = require(\"@nestjs/swagger\");\nconst common_1 = require(\"@nestjs/common\");\nconst swagger_1 = require(\"@nestjs/swagger\");\nclass Cat {\n}\nlet AppController = class AppController {\n    onApplicationBootstrap() { }\n    /**\n     * create a Cat\n     *\n     * @returns {Promise<Cat>}\n     * @memberof AppController\n     */\n    create() { }\n    /**\n     * create a test Cat\n     *\n     * @deprecated Use create instead\n     * @returns {Promise<Cat>}\n     * @memberof AppController\n     */\n    testCreate() { }\n    /**\n     * create a test Cat, not actually deprecated\n     *\n     * @deprecated\n     * @returns {Promise<Cat>}\n     * @memberof AppController\n     */\n    testCreate2() { }\n    /**\n     * find a Cat\n     */\n    findOne() { }\n    /**\n     * find all Cats im comment\n     *\n     * @returns {Promise<Cat>}\n     * @memberof AppController\n     */\n    findAll() { }\n    noComment() { }\n};\nexports.AppController = AppController;\n__decorate([\n    openapi.ApiOperation({ summary: \"create a Cat\" }),\n    (0, common_1.Post)(),\n    openapi.ApiResponse({ status: 201, type: Cat })\n], AppController.prototype, \"create\", null);\n__decorate([\n    openapi.ApiOperation({ summary: \"create a test Cat\", deprecated: true }),\n    (0, common_1.Post)(),\n    openapi.ApiResponse({ status: 201, type: Cat })\n], AppController.prototype, \"testCreate\", null);\n__decorate([\n    (0, swagger_1.ApiOperation)({ summary: \"create a test Cat, not actually deprecated\", deprecated: false }),\n    (0, common_1.Post)(),\n    openapi.ApiResponse({ status: 201, type: Cat })\n], AppController.prototype, \"testCreate2\", null);\n__decorate([\n    (0, swagger_1.ApiOperation)({ summary: \"find a Cat\" }),\n    Get(),\n    openapi.ApiResponse({ status: 200, type: Cat })\n], AppController.prototype, \"findOne\", null);\n__decorate([\n    (0, swagger_1.ApiOperation)({ summary: \"find all Cats im comment\", description: 'find all Cats' }),\n    Get(),\n    HttpCode(common_1.HttpStatus.NO_CONTENT),\n    openapi.ApiResponse({ status: common_1.HttpStatus.NO_CONTENT, type: [Cat] })\n], AppController.prototype, \"findAll\", null);\n__decorate([\n    Get(),\n    HttpCode(common_1.HttpStatus.NO_CONTENT),\n    openapi.ApiResponse({ status: common_1.HttpStatus.NO_CONTENT })\n], AppController.prototype, \"noComment\", null);\nexports.AppController = AppController = __decorate([\n    (0, common_1.Controller)('cats')\n], AppController);\n";

export declare const appControllerWithTabsText = "import { Controller, Post, HttpStatus } from '@nestjs/common';\nimport { ApiOperation } from '@nestjs/swagger';\n\nclass Cat {}\n\n@Controller('cats')\nexport class AppController {\n\tonApplicationBootstrap() {}\n\n\t/**\n\t * create a Cat\n\t *\n\t * @returns {Promise<Cat>}\n\t * @memberof AppController\n\t */\n\t@Post()\n\tasync create(): Promise<Cat> {}\n\n\t/**\n\t * find a Cat\n\t */\n\t@ApiOperation({})\n\t@Get()\n\tasync findOne(): Promise<Cat> {}\n\n\t/**\n\t * find all Cats im comment\n\t *\n\t * @returns {Promise<Cat>}\n\t * @memberof AppController\n\t */\n\t@ApiOperation({\n\tdescription: 'find all Cats',\n\t})\n\t@Get()\n\t@HttpCode(HttpStatus.NO_CONTENT)\n\tasync findAll(): Promise<Cat[]> {}\n}";
export declare const appControllerWithTabsTextTranspiled = "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AppController = void 0;\nconst openapi = require(\"@nestjs/swagger\");\nconst common_1 = require(\"@nestjs/common\");\nconst swagger_1 = require(\"@nestjs/swagger\");\nclass Cat {\n}\nlet AppController = class AppController {\n    onApplicationBootstrap() { }\n    /**\n     * create a Cat\n     *\n     * @returns {Promise<Cat>}\n     * @memberof AppController\n     */\n    async create() { }\n    /**\n     * find a Cat\n     */\n    async findOne() { }\n    /**\n     * find all Cats im comment\n     *\n     * @returns {Promise<Cat>}\n     * @memberof AppController\n     */\n    async findAll() { }\n};\nexports.AppController = AppController;\n__decorate([\n    openapi.ApiOperation({ summary: \"create a Cat\" }),\n    (0, common_1.Post)(),\n    openapi.ApiResponse({ status: 201, type: Cat })\n], AppController.prototype, \"create\", null);\n__decorate([\n    (0, swagger_1.ApiOperation)({ summary: \"find a Cat\" }),\n    Get(),\n    openapi.ApiResponse({ status: 200, type: Cat })\n], AppController.prototype, \"findOne\", null);\n__decorate([\n    (0, swagger_1.ApiOperation)({ summary: \"find all Cats im comment\", description: 'find all Cats' }),\n    Get(),\n    HttpCode(common_1.HttpStatus.NO_CONTENT),\n    openapi.ApiResponse({ status: common_1.HttpStatus.NO_CONTENT, type: [Cat] })\n], AppController.prototype, \"findAll\", null);\nexports.AppController = AppController = __decorate([\n    (0, common_1.Controller)('cats')\n], AppController);\n";
